// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace TunaPiano.Migrations
{
    [DbContext(typeof(TunaPianoDbContext))]
    [Migration("20240907173513_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GenreSong", b =>
                {
                    b.Property<int>("GenresGenreId")
                        .HasColumnType("integer");

                    b.Property<int>("SongsSongId")
                        .HasColumnType("integer");

                    b.HasKey("GenresGenreId", "SongsSongId");

                    b.HasIndex("SongsSongId");

                    b.ToTable("SongGenre", (string)null);

                    b.HasData(
                        new
                        {
                            GenresGenreId = 1,
                            SongsSongId = 1
                        },
                        new
                        {
                            GenresGenreId = 4,
                            SongsSongId = 2
                        },
                        new
                        {
                            GenresGenreId = 2,
                            SongsSongId = 3
                        },
                        new
                        {
                            GenresGenreId = 3,
                            SongsSongId = 4
                        },
                        new
                        {
                            GenresGenreId = 2,
                            SongsSongId = 5
                        });
                });

            modelBuilder.Entity("TunaPiano.Models.Artist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ArtistId"));

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("Bio")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ArtistId");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            ArtistId = 1,
                            Age = 20,
                            Bio = "Andrew's Bio",
                            Name = "Andrew"
                        },
                        new
                        {
                            ArtistId = 2,
                            Age = 25,
                            Bio = "Taylor's Bio",
                            Name = "Taylor"
                        },
                        new
                        {
                            ArtistId = 3,
                            Age = 30,
                            Bio = "Derek's Bio",
                            Name = "Derek"
                        },
                        new
                        {
                            ArtistId = 4,
                            Age = 35,
                            Bio = "Ross's Bio",
                            Name = "Ross"
                        });
                });

            modelBuilder.Entity("TunaPiano.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GenreId"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            Description = "Rock"
                        },
                        new
                        {
                            GenreId = 2,
                            Description = "Rap"
                        },
                        new
                        {
                            GenreId = 3,
                            Description = "Country"
                        },
                        new
                        {
                            GenreId = 4,
                            Description = "Pop"
                        });
                });

            modelBuilder.Entity("TunaPiano.Models.Song", b =>
                {
                    b.Property<int>("SongId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SongId"));

                    b.Property<string>("Album")
                        .HasColumnType("text");

                    b.Property<int>("ArtistId")
                        .HasColumnType("integer");

                    b.Property<int>("Length")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("SongId");

                    b.HasIndex("ArtistId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            SongId = 1,
                            Album = "Rock Album",
                            ArtistId = 1,
                            Length = 3,
                            Title = "Rock Song"
                        },
                        new
                        {
                            SongId = 2,
                            Album = "Pop Album",
                            ArtistId = 2,
                            Length = 4,
                            Title = "Pop Song"
                        },
                        new
                        {
                            SongId = 3,
                            Album = "Rap Album",
                            ArtistId = 3,
                            Length = 5,
                            Title = "Rap Song"
                        },
                        new
                        {
                            SongId = 4,
                            Album = "Country Album",
                            ArtistId = 1,
                            Length = 3,
                            Title = "Country Song"
                        },
                        new
                        {
                            SongId = 5,
                            Album = "Derek's Rap Party",
                            ArtistId = 3,
                            Length = 5,
                            Title = "Rap Song 2"
                        });
                });

            modelBuilder.Entity("GenreSong", b =>
                {
                    b.HasOne("TunaPiano.Models.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresGenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TunaPiano.Models.Song", null)
                        .WithMany()
                        .HasForeignKey("SongsSongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TunaPiano.Models.Song", b =>
                {
                    b.HasOne("TunaPiano.Models.Artist", "Artist")
                        .WithMany("Songs")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("TunaPiano.Models.Artist", b =>
                {
                    b.Navigation("Songs");
                });
#pragma warning restore 612, 618
        }
    }
}
